{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ACER\\\\Desktop\\\\Integration\\\\Login\\\\FrontEnd\\\\src\\\\Chatbot.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chatbot = () => {\n  _s();\n  const [input, setInput] = useState('');\n  const [messages, setMessages] = useState([]);\n  const azureEndpoint = 'https://MedSurveyAI-bot-053b.azurewebsites.net/api/messages';\n  const azureKey = 'ab7f96ae661e4057a79d09bc2546aa1c';\n  const sendMessage = async () => {\n    if (input.trim() === '') return;\n\n    // Append user message to the messages list\n    setMessages([...messages, {\n      text: input,\n      sender: 'user'\n    }]);\n    try {\n      const response = await axios.post(`${azureEndpoint}/language/:analyze-text`, {\n        // Customize this request payload according to your specific Language Service configuration\n        text: input,\n        parameters: {\n          projectName: \"MedSurvey\",\n          // Replace with your project name\n          deploymentName: \"Microsoft.Template-20240831064858\" // Replace with your deployment name\n        }\n      }, {\n        headers: {\n          'Ocp-Apim-Subscription-Key': azureKey,\n          'Content-Type': 'application/json'\n        }\n      });\n      const botMessage = response.data.text; // Adjust this according to your Azure response structure\n      setMessages([...messages, {\n        text: input,\n        sender: 'user'\n      }, {\n        text: botMessage,\n        sender: 'bot'\n      }]);\n    } catch (error) {\n      console.error('Error communicating with Azure Language Service:', error);\n      setMessages([...messages, {\n        text: input,\n        sender: 'user'\n      }, {\n        text: 'Error: Unable to get response from Azure',\n        sender: 'bot'\n      }]);\n    }\n    setInput(''); // Clear the input field\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      maxWidth: '500px',\n      margin: '0 auto'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Azure Chatbot\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        border: '1px solid #ccc',\n        padding: '10px',\n        height: '300px',\n        overflowY: 'scroll',\n        marginBottom: '10px'\n      },\n      children: messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          textAlign: message.sender === 'user' ? 'right' : 'left'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [message.sender === 'user' ? 'You' : 'Bot', \":\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 28\n          }, this), \" \", message.text]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 25\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: input,\n      onChange: e => setInput(e.target.value),\n      onKeyPress: e => e.key === 'Enter' ? sendMessage() : null,\n      style: {\n        width: '80%',\n        padding: '10px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: sendMessage,\n      style: {\n        width: '20%',\n        padding: '10px'\n      },\n      children: \"Send\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this);\n};\n_s(Chatbot, \"Xhz1M2btVGAzY17pd7+8a34J2bk=\");\n_c = Chatbot;\nexport default Chatbot;\nvar _c;\n$RefreshReg$(_c, \"Chatbot\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","Chatbot","_s","input","setInput","messages","setMessages","azureEndpoint","azureKey","sendMessage","trim","text","sender","response","post","parameters","projectName","deploymentName","headers","botMessage","data","error","console","style","maxWidth","margin","children","fileName","_jsxFileName","lineNumber","columnNumber","border","padding","height","overflowY","marginBottom","map","message","index","textAlign","type","value","onChange","e","target","onKeyPress","key","width","onClick","_c","$RefreshReg$"],"sources":["C:/Users/ACER/Desktop/Integration/Login/FrontEnd/src/Chatbot.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst Chatbot = () => {\r\n    const [input, setInput] = useState('');\r\n    const [messages, setMessages] = useState([]);\r\n\r\n    const azureEndpoint = 'https://MedSurveyAI-bot-053b.azurewebsites.net/api/messages';\r\n    const azureKey = 'ab7f96ae661e4057a79d09bc2546aa1c';\r\n\r\n    const sendMessage = async () => {\r\n        if (input.trim() === '') return;\r\n\r\n        // Append user message to the messages list\r\n        setMessages([...messages, { text: input, sender: 'user' }]);\r\n\r\n        try {\r\n            const response = await axios.post(\r\n                `${azureEndpoint}/language/:analyze-text`,\r\n                {\r\n                    // Customize this request payload according to your specific Language Service configuration\r\n                    text: input,\r\n                    parameters: {\r\n                        projectName: \"MedSurvey\", // Replace with your project name\r\n                        deploymentName: \"Microsoft.Template-20240831064858\", // Replace with your deployment name\r\n                    }\r\n                },\r\n                {\r\n                    headers: {\r\n                        'Ocp-Apim-Subscription-Key': azureKey,\r\n                        'Content-Type': 'application/json'\r\n                    }\r\n                }\r\n            );\r\n\r\n            const botMessage = response.data.text; // Adjust this according to your Azure response structure\r\n            setMessages([...messages, { text: input, sender: 'user' }, { text: botMessage, sender: 'bot' }]);\r\n        } catch (error) {\r\n            console.error('Error communicating with Azure Language Service:', error);\r\n            setMessages([...messages, { text: input, sender: 'user' }, { text: 'Error: Unable to get response from Azure', sender: 'bot' }]);\r\n        }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n        \r\n        setInput(''); // Clear the input field\r\n    };\r\n\r\n    return (\r\n        <div style={{ maxWidth: '500px', margin: '0 auto' }}>\r\n            <h2>Azure Chatbot</h2>\r\n            <div style={{ border: '1px solid #ccc', padding: '10px', height: '300px', overflowY: 'scroll', marginBottom: '10px' }}>\r\n                {messages.map((message, index) => (\r\n                    <div key={index} style={{ textAlign: message.sender === 'user' ? 'right' : 'left' }}>\r\n                        <p><strong>{message.sender === 'user' ? 'You' : 'Bot'}:</strong> {message.text}</p>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n            <input\r\n                type=\"text\"\r\n                value={input}\r\n                onChange={(e) => setInput(e.target.value)}\r\n                onKeyPress={(e) => e.key === 'Enter' ? sendMessage() : null}\r\n                style={{ width: '80%', padding: '10px' }}\r\n            />\r\n            <button onClick={sendMessage} style={{ width: '20%', padding: '10px' }}>Send</button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Chatbot;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}