{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ACER\\\\Desktop\\\\Integration\\\\Login\\\\FrontEnd\\\\src\\\\components\\\\Navbar.tsx\",\n  _s = $RefreshSig$();\n// import React from 'react';\n// import { Button } from './Button.tsx';\n\n// export const Navbar: React.FC = () => {\n//   const handleButtonClick = (url: string) => {\n//     window.location.href = url;\n//   };\n\n//   return (\n//     <nav className=\"bg-green-700 p-4 text-white flex justify-between items-center\">\n//       <div className=\"logo-title\">\n//         <h2 className=\"text-2xl\">RAJ & RAHUL Tech Solutions Ltd</h2>\n//       </div>\n//       <div className=\"flex space-x-3\">\n//         <Button onClick={() => handleButtonClick(\"\")}>ABOUT</Button>\n//         <Button onClick={() => handleButtonClick(\"\")}>CALL CARE</Button>\n//         <Button onClick={() => handleButtonClick(\"\")}>LOGOUT</Button>\n//       </div>\n//     </nav>\n//   );\n// };\n\n// import React from 'react';\n// import './Navbar.css'; // Import the Navbar CSS\n// import { Button } from './Button.tsx';\n\n// export const Navbar: React.FC = () => {\n//   const handleButtonClick = (url: string) => {\n//     window.location.href = url;\n//   };\n\n//   return (\n//     <nav className=\"navbar\">\n//       <div className=\"logo-title\">\n//         <h2>RAJ & RAHUL Tech Solutions Ltd</h2>\n//       </div>\n//       <div className=\"navbar-buttons\">\n//         <Button onClick={() => handleButtonClick(\"\")}>ABOUT</Button>\n//         <Button onClick={() => handleButtonClick(\"\")}>CALL CARE</Button>\n//         <Button onClick={() => handleButtonClick(\"\")}>LOGOUT</Button>\n//       </div>\n//     </nav>\n//   );\n// };\n\n// import React from 'react';\n// import './Navbar.css'; // Import the Navbar CSS\n// import { Button } from './Button.tsx';\n\n// export const Navbar: React.FC = () => {\n//   const handleButtonClick = (url: string) => {\n//     if (url === \"logout\") {\n//       // Perform logout actions\n//       localStorage.removeItem('authToken'); // Example: remove auth token\n//       // You can remove other authentication-related data as needed\n\n//       window.location.href = '/Login'; // Redirect to the login page\n//     } else {\n//       window.location.href = url;\n//     }\n//   };\n\n//   return (\n//     <nav className=\"navbar\">\n//       <div className=\"logo-title\">\n//         <h2>RAJ & RAHUL Tech Solutions Ltd</h2>\n//       </div>\n//       <div className=\"navbar-buttons\">\n//         <Button onClick={() => handleButtonClick(\"/about\")}>ABOUT</Button>\n//         <Button onClick={() => handleButtonClick(\"/call-care\")}>CALL CARE</Button>\n//         <Button onClick={() => handleButtonClick(\"logout\")}>LOGOUT</Button>\n//       </div>\n//     </nav>\n//   );\n// };\n\n// import React from 'react';\n// import './Navbar.css'; // Import the Navbar CSS\n// import { Button } from './Button.tsx';\n// import { useNavigate } from 'react-router-dom';\n\n// export const Navbar: React.FC = () => {\n//   const navigate = useNavigate();\n\n//   const handleButtonClick = (url: string) => {\n//     if (url === \"logout\") {\n//       // Perform logout actions\n//       localStorage.removeItem('isAuthenticated'); // Clear the authentication status\n\n//       // Redirect to the login page using navigate\n//       navigate('/'); // '/' points to the Login page as per your routing setup\n//     } else {\n//       navigate(url);\n//     }\n//   };\n\n//   return (\n//     <nav className=\"navbar\">\n//       <div className=\"logo-title\">\n//         <h2>RAJ & RAHUL Tech Solutions Ltd</h2>\n//       </div>\n//       <div className=\"navbar-buttons\">\n//         <Button onClick={() => handleButtonClick(\"/about\")}>ABOUT</Button>\n//         <Button onClick={() => handleButtonClick(\"/call-care\")}>CALL CARE</Button>\n//         <Button onClick={() => handleButtonClick(\"logout\")}>LOGOUT</Button>\n//       </div>\n//     </nav>\n//   );\n// };\n\n// import React, { useState } from 'react';\n// import './Navbar.css'; // Import the Navbar CSS\n// import { Button } from './Button.tsx';\n// import { useNavigate } from 'react-router-dom';\n// import profileImg from './profile.jpg';\n\n// export const Navbar: React.FC = () => {\n//   const [showProfileMenu, setShowProfileMenu] = useState(false);\n//   const navigate = useNavigate();\n\n//   const handleButtonClick = (url: string) => {\n//     if (url === \"logout\") {\n//       // Perform logout actions\n//       localStorage.removeItem('isAuthenticated'); // Clear the authentication status\n\n//       // Redirect to the login page using navigate\n//       navigate('/'); // '/' points to the Login page as per your routing setup\n//     } else {\n//       navigate(url);\n//     }\n//   };\n\n//   return (\n//     <nav className=\"navbar\">\n//       <div className=\"navbar-center\">\n//         <Button onClick={() => handleButtonClick(\"/home\")}>Home</Button>\n//         <Button onClick={() => handleButtonClick(\"/about\")}>About</Button>\n//         <Button onClick={() => handleButtonClick(\"/contact\")}>Contact</Button>\n//       </div>\n//       <div className=\"profile-menu\">\n//         <button \n//           className=\"profile-icon\"\n//           onClick={() => setShowProfileMenu(prev => !prev)}\n//         >\n//           <img src={profileImg} alt=\"Profile\" /> {/* Replace with actual profile icon path */}\n//         </button>\n//         {showProfileMenu && (\n//           <div className=\"profile-dropdown\">\n//             <button onClick={() => handleButtonClick(\"/profile\")}>My Profile</button>\n//             <button onClick={() => handleButtonClick(\"logout\")}>Logout</button>\n//           </div>\n//         )}\n//       </div>\n//     </nav>\n//   );\n// };\n\nimport React, { useState } from 'react';\nimport './Navbar.css'; // Import the Navbar CSS\nimport { Button } from './Button.tsx'; // Make sure you have this component\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Navbar = () => {\n  _s();\n  const [isProfileMenuOpen, setProfileMenuOpen] = useState(false);\n  const navigate = useNavigate();\n  const handleButtonClick = url => {\n    if (url === \"logout\") {\n      // Perform logout actions\n      localStorage.removeItem('isAuthenticated'); // Clear the authentication status\n      navigate('/'); // Redirect to the login page\n    } else {\n      navigate(url);\n    }\n  };\n  const toggleProfileMenu = () => {\n    setProfileMenuOpen(!isProfileMenuOpen);\n  };\n  return /*#__PURE__*/_jsxDEV(\"nav\", {\n    className: \"navbar\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"navbar-center\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"navbar-buttons\",\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => handleButtonClick(\"/home\"),\n          children: \"Home\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => handleButtonClick(\"/about\"),\n          children: \"About\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => handleButtonClick(\"/contact\"),\n          children: \"Contact\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"profile-menu\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"profile-icon\",\n        onClick: toggleProfileMenu,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"./profile.jpg\",\n          alt: \"Profile\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 9\n      }, this), isProfileMenuOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"profile-dropdown\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleButtonClick(\"/profile\"),\n          children: \"My Profile\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleButtonClick(\"logout\"),\n          children: \"Logout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 182,\n    columnNumber: 5\n  }, this);\n};\n_s(Navbar, \"x61JCGdon+XlWP0TvH7L2zhwXA4=\", false, function () {\n  return [useNavigate];\n});\n_c = Navbar;\nvar _c;\n$RefreshReg$(_c, \"Navbar\");","map":{"version":3,"names":["React","useState","Button","useNavigate","jsxDEV","_jsxDEV","Navbar","_s","isProfileMenuOpen","setProfileMenuOpen","navigate","handleButtonClick","url","localStorage","removeItem","toggleProfileMenu","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","_c","$RefreshReg$"],"sources":["C:/Users/ACER/Desktop/Integration/Login/FrontEnd/src/components/Navbar.tsx"],"sourcesContent":["// import React from 'react';\r\n// import { Button } from './Button.tsx';\r\n\r\n// export const Navbar: React.FC = () => {\r\n//   const handleButtonClick = (url: string) => {\r\n//     window.location.href = url;\r\n//   };\r\n\r\n//   return (\r\n//     <nav className=\"bg-green-700 p-4 text-white flex justify-between items-center\">\r\n//       <div className=\"logo-title\">\r\n//         <h2 className=\"text-2xl\">RAJ & RAHUL Tech Solutions Ltd</h2>\r\n//       </div>\r\n//       <div className=\"flex space-x-3\">\r\n//         <Button onClick={() => handleButtonClick(\"\")}>ABOUT</Button>\r\n//         <Button onClick={() => handleButtonClick(\"\")}>CALL CARE</Button>\r\n//         <Button onClick={() => handleButtonClick(\"\")}>LOGOUT</Button>\r\n//       </div>\r\n//     </nav>\r\n//   );\r\n// };\r\n\r\n// import React from 'react';\r\n// import './Navbar.css'; // Import the Navbar CSS\r\n// import { Button } from './Button.tsx';\r\n\r\n// export const Navbar: React.FC = () => {\r\n//   const handleButtonClick = (url: string) => {\r\n//     window.location.href = url;\r\n//   };\r\n\r\n//   return (\r\n//     <nav className=\"navbar\">\r\n//       <div className=\"logo-title\">\r\n//         <h2>RAJ & RAHUL Tech Solutions Ltd</h2>\r\n//       </div>\r\n//       <div className=\"navbar-buttons\">\r\n//         <Button onClick={() => handleButtonClick(\"\")}>ABOUT</Button>\r\n//         <Button onClick={() => handleButtonClick(\"\")}>CALL CARE</Button>\r\n//         <Button onClick={() => handleButtonClick(\"\")}>LOGOUT</Button>\r\n//       </div>\r\n//     </nav>\r\n//   );\r\n// };\r\n\r\n// import React from 'react';\r\n// import './Navbar.css'; // Import the Navbar CSS\r\n// import { Button } from './Button.tsx';\r\n\r\n// export const Navbar: React.FC = () => {\r\n//   const handleButtonClick = (url: string) => {\r\n//     if (url === \"logout\") {\r\n//       // Perform logout actions\r\n//       localStorage.removeItem('authToken'); // Example: remove auth token\r\n//       // You can remove other authentication-related data as needed\r\n\r\n//       window.location.href = '/Login'; // Redirect to the login page\r\n//     } else {\r\n//       window.location.href = url;\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <nav className=\"navbar\">\r\n//       <div className=\"logo-title\">\r\n//         <h2>RAJ & RAHUL Tech Solutions Ltd</h2>\r\n//       </div>\r\n//       <div className=\"navbar-buttons\">\r\n//         <Button onClick={() => handleButtonClick(\"/about\")}>ABOUT</Button>\r\n//         <Button onClick={() => handleButtonClick(\"/call-care\")}>CALL CARE</Button>\r\n//         <Button onClick={() => handleButtonClick(\"logout\")}>LOGOUT</Button>\r\n//       </div>\r\n//     </nav>\r\n//   );\r\n// };\r\n\r\n// import React from 'react';\r\n// import './Navbar.css'; // Import the Navbar CSS\r\n// import { Button } from './Button.tsx';\r\n// import { useNavigate } from 'react-router-dom';\r\n\r\n// export const Navbar: React.FC = () => {\r\n//   const navigate = useNavigate();\r\n\r\n//   const handleButtonClick = (url: string) => {\r\n//     if (url === \"logout\") {\r\n//       // Perform logout actions\r\n//       localStorage.removeItem('isAuthenticated'); // Clear the authentication status\r\n\r\n//       // Redirect to the login page using navigate\r\n//       navigate('/'); // '/' points to the Login page as per your routing setup\r\n//     } else {\r\n//       navigate(url);\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <nav className=\"navbar\">\r\n//       <div className=\"logo-title\">\r\n//         <h2>RAJ & RAHUL Tech Solutions Ltd</h2>\r\n//       </div>\r\n//       <div className=\"navbar-buttons\">\r\n//         <Button onClick={() => handleButtonClick(\"/about\")}>ABOUT</Button>\r\n//         <Button onClick={() => handleButtonClick(\"/call-care\")}>CALL CARE</Button>\r\n//         <Button onClick={() => handleButtonClick(\"logout\")}>LOGOUT</Button>\r\n//       </div>\r\n//     </nav>\r\n//   );\r\n// };\r\n\r\n// import React, { useState } from 'react';\r\n// import './Navbar.css'; // Import the Navbar CSS\r\n// import { Button } from './Button.tsx';\r\n// import { useNavigate } from 'react-router-dom';\r\n// import profileImg from './profile.jpg';\r\n\r\n// export const Navbar: React.FC = () => {\r\n//   const [showProfileMenu, setShowProfileMenu] = useState(false);\r\n//   const navigate = useNavigate();\r\n\r\n//   const handleButtonClick = (url: string) => {\r\n//     if (url === \"logout\") {\r\n//       // Perform logout actions\r\n//       localStorage.removeItem('isAuthenticated'); // Clear the authentication status\r\n\r\n//       // Redirect to the login page using navigate\r\n//       navigate('/'); // '/' points to the Login page as per your routing setup\r\n//     } else {\r\n//       navigate(url);\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <nav className=\"navbar\">\r\n//       <div className=\"navbar-center\">\r\n//         <Button onClick={() => handleButtonClick(\"/home\")}>Home</Button>\r\n//         <Button onClick={() => handleButtonClick(\"/about\")}>About</Button>\r\n//         <Button onClick={() => handleButtonClick(\"/contact\")}>Contact</Button>\r\n//       </div>\r\n//       <div className=\"profile-menu\">\r\n//         <button \r\n//           className=\"profile-icon\"\r\n//           onClick={() => setShowProfileMenu(prev => !prev)}\r\n//         >\r\n//           <img src={profileImg} alt=\"Profile\" /> {/* Replace with actual profile icon path */}\r\n//         </button>\r\n//         {showProfileMenu && (\r\n//           <div className=\"profile-dropdown\">\r\n//             <button onClick={() => handleButtonClick(\"/profile\")}>My Profile</button>\r\n//             <button onClick={() => handleButtonClick(\"logout\")}>Logout</button>\r\n//           </div>\r\n//         )}\r\n//       </div>\r\n//     </nav>\r\n//   );\r\n// };\r\n\r\nimport React, { useState } from 'react';\r\nimport './Navbar.css'; // Import the Navbar CSS\r\nimport { Button } from './Button.tsx'; // Make sure you have this component\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nexport const Navbar: React.FC = () => {\r\n  const [isProfileMenuOpen, setProfileMenuOpen] = useState(false);\r\n  const navigate = useNavigate();\r\n\r\n  const handleButtonClick = (url: string) => {\r\n    if (url === \"logout\") {\r\n      // Perform logout actions\r\n      localStorage.removeItem('isAuthenticated'); // Clear the authentication status\r\n      navigate('/'); // Redirect to the login page\r\n    } else {\r\n      navigate(url);\r\n    }\r\n  };\r\n\r\n  const toggleProfileMenu = () => {\r\n    setProfileMenuOpen(!isProfileMenuOpen);\r\n  };\r\n\r\n  return (\r\n    <nav className=\"navbar\">\r\n      <div className=\"navbar-center\">\r\n        <div className=\"navbar-buttons\">\r\n          <Button onClick={() => handleButtonClick(\"/home\")}>Home</Button>\r\n          <Button onClick={() => handleButtonClick(\"/about\")}>About</Button>\r\n          <Button onClick={() => handleButtonClick(\"/contact\")}>Contact</Button>\r\n        </div>\r\n      </div>\r\n      <div className=\"profile-menu\">\r\n        <div className=\"profile-icon\" onClick={toggleProfileMenu}>\r\n          <img src='./profile.jpg' alt=\"Profile\" />\r\n        </div>\r\n        {isProfileMenuOpen && (\r\n          <div className=\"profile-dropdown\">\r\n            <button onClick={() => handleButtonClick(\"/profile\")}>My Profile</button>\r\n            <button onClick={() => handleButtonClick(\"logout\")}>Logout</button>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\n\r\n\r\n\r\n"],"mappings":";;AAAA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,cAAc,CAAC,CAAC;AACvB,SAASC,MAAM,QAAQ,cAAc,CAAC,CAAC;AACvC,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,OAAO,MAAMC,MAAgB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpC,MAAM,CAACC,iBAAiB,EAAEC,kBAAkB,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EAC/D,MAAMS,QAAQ,GAAGP,WAAW,CAAC,CAAC;EAE9B,MAAMQ,iBAAiB,GAAIC,GAAW,IAAK;IACzC,IAAIA,GAAG,KAAK,QAAQ,EAAE;MACpB;MACAC,YAAY,CAACC,UAAU,CAAC,iBAAiB,CAAC,CAAC,CAAC;MAC5CJ,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC;IACjB,CAAC,MAAM;MACLA,QAAQ,CAACE,GAAG,CAAC;IACf;EACF,CAAC;EAED,MAAMG,iBAAiB,GAAGA,CAAA,KAAM;IAC9BN,kBAAkB,CAAC,CAACD,iBAAiB,CAAC;EACxC,CAAC;EAED,oBACEH,OAAA;IAAKW,SAAS,EAAC,QAAQ;IAAAC,QAAA,gBACrBZ,OAAA;MAAKW,SAAS,EAAC,eAAe;MAAAC,QAAA,eAC5BZ,OAAA;QAAKW,SAAS,EAAC,gBAAgB;QAAAC,QAAA,gBAC7BZ,OAAA,CAACH,MAAM;UAACgB,OAAO,EAAEA,CAAA,KAAMP,iBAAiB,CAAC,OAAO,CAAE;UAAAM,QAAA,EAAC;QAAI;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eAChEjB,OAAA,CAACH,MAAM;UAACgB,OAAO,EAAEA,CAAA,KAAMP,iBAAiB,CAAC,QAAQ,CAAE;UAAAM,QAAA,EAAC;QAAK;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eAClEjB,OAAA,CAACH,MAAM;UAACgB,OAAO,EAAEA,CAAA,KAAMP,iBAAiB,CAAC,UAAU,CAAE;UAAAM,QAAA,EAAC;QAAO;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eACNjB,OAAA;MAAKW,SAAS,EAAC,cAAc;MAAAC,QAAA,gBAC3BZ,OAAA;QAAKW,SAAS,EAAC,cAAc;QAACE,OAAO,EAAEH,iBAAkB;QAAAE,QAAA,eACvDZ,OAAA;UAAKkB,GAAG,EAAC,eAAe;UAACC,GAAG,EAAC;QAAS;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACtC,CAAC,EACLd,iBAAiB,iBAChBH,OAAA;QAAKW,SAAS,EAAC,kBAAkB;QAAAC,QAAA,gBAC/BZ,OAAA;UAAQa,OAAO,EAAEA,CAAA,KAAMP,iBAAiB,CAAC,UAAU,CAAE;UAAAM,QAAA,EAAC;QAAU;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACzEjB,OAAA;UAAQa,OAAO,EAAEA,CAAA,KAAMP,iBAAiB,CAAC,QAAQ,CAAE;UAAAM,QAAA,EAAC;QAAM;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChE,CACN;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACf,EAAA,CAxCWD,MAAgB;EAAA,QAEVH,WAAW;AAAA;AAAAsB,EAAA,GAFjBnB,MAAgB;AAAA,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}