{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ACER\\\\Desktop\\\\Survey shield\\\\FrontEnd\\\\src\\\\ResetPassword.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ResetPassword() {\n  _s();\n  const {\n    token\n  } = useParams();\n  const [newPassword, setNewPassword] = useState('');\n  const [message, setMessage] = useState('');\n  const navigate = useNavigate();\n  const handleSubmit = event => {\n    event.preventDefault();\n    axios.post(`http://localhost:8081/reset-password/${token}`, {\n      newPassword\n    }).then(res => {\n      setMessage(res.data);\n      if (res.data === 'Password updated successfully') {\n        navigate('/');\n      }\n    }).catch(err => console.log(err));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"d-flex justify-content-center align-items-center bg-primary vh-100\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white p-3 rounded w-25\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Reset Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"newPassword\",\n            children: /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"New Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 54\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            placeholder: \"Enter new password\",\n            className: \"form-control rounded-0\",\n            onChange: e => setNewPassword(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn btn-success w-100 rounded-0\",\n          children: \"Reset Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 29\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n}\n_s(ResetPassword, \"VTsAr84SJQHXXyojDyzfjj20iuA=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = ResetPassword;\nexport default ResetPassword;\nvar _c;\n$RefreshReg$(_c, \"ResetPassword\");","map":{"version":3,"names":["React","useState","useParams","useNavigate","axios","jsxDEV","_jsxDEV","ResetPassword","_s","token","newPassword","setNewPassword","message","setMessage","navigate","handleSubmit","event","preventDefault","post","then","res","data","catch","err","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","placeholder","onChange","e","target","value","required","_c","$RefreshReg$"],"sources":["C:/Users/ACER/Desktop/Survey shield/FrontEnd/src/ResetPassword.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nfunction ResetPassword() {\r\n    const { token } = useParams();\r\n    const [newPassword, setNewPassword] = useState('');\r\n    const [message, setMessage] = useState('');\r\n    const navigate = useNavigate();\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        axios.post(`http://localhost:8081/reset-password/${token}`, { newPassword })\r\n            .then(res => {\r\n                setMessage(res.data);\r\n                if (res.data === 'Password updated successfully') {\r\n                    navigate('/');\r\n                }\r\n            })\r\n            .catch(err => console.log(err));\r\n    };\r\n\r\n    return (\r\n        <div className=\"d-flex justify-content-center align-items-center bg-primary vh-100\">\r\n            <div className=\"bg-white p-3 rounded w-25\">\r\n                <h2>Reset Password</h2>\r\n                <form onSubmit={handleSubmit}>\r\n                    <div className=\"mb-3\">\r\n                        <label htmlFor=\"newPassword\"><strong>New Password</strong></label>\r\n                        <input\r\n                            type=\"password\"\r\n                            placeholder=\"Enter new password\"\r\n                            className=\"form-control rounded-0\"\r\n                            onChange={(e) => setNewPassword(e.target.value)}\r\n                            required\r\n                        />\r\n                    </div>\r\n                    <button type=\"submit\" className=\"btn btn-success w-100 rounded-0\">Reset Password</button>\r\n                </form>\r\n                {message && <p>{message}</p>}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ResetPassword;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}